{"name":"Design-patterns-in-python","tagline":"","body":"Design-Patterns-In-Python\r\n=========================\r\n\r\nThis is the git repository containing the files for a book I am writing. \r\nThis book is all about making reusable elements of software design.\r\n\r\nWhile I started to write this as an e-book, I now think the way to do \r\nthis is write a blog post per design pattern and then compile them into \r\na guide. These blog posts can be found [here](http://davidcorne.com/category/design-patterns-in-python/)\r\n\r\nThese patterns will fit roughly into four categories:\r\n\r\n* Creational\r\n    * Abstract factory\r\n    * Builder\r\n    * Factory method\r\n    * __Lazy initialization__\r\n    * __Multiton__\r\n    * __Object pool__\r\n    * Prototype\r\n    * __Resource acquisition is initialization__\r\n    * Singleton\r\n* Structural\r\n    * Adapter\r\n    * Bridge\r\n    * Composite\r\n    * Decorator\r\n    * Facade\r\n    * Flyweight\r\n    * __Front Controller__\r\n    * __Module__\r\n    * Proxy\r\n    * __Telescoping constructor__\r\n* Behavioural\r\n    * __Blackboard__\r\n    * Chain of Responsibility\r\n    * Command\r\n    * __Data Caching__\r\n    * Interpreter\r\n    * Iterator\r\n    * Mediator\r\n    * Memento\r\n    * __Null object__\r\n    * Observer (Publish/Subscribe)\r\n    * State\r\n    * __Servant__\r\n    * __Specification__\r\n    * Strategy\r\n    * Template\r\n    * Visitor\r\n* UI Patterns\r\n    * __Model View Presenter__\r\n    * __Model View Controller__\r\n    * __Model View View-Model__\r\n    * __Model View Adapter__\r\n    * __Presentation Abstraction Control__\r\n\r\nPatterns in __bold__ are non [gang of four](http://en.wikipedia.org/wiki/Gang_of_Four) patterns.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}